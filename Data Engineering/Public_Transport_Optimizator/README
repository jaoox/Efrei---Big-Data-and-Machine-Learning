# Paris Public Transportation Optimizer

## Overview

This project aims to create a Smart Public Transportation Optimizer using IoT devices and an integrated information system to enhance the efficiency of public transport networks in Paris.

### Concept

Our concept involves utilizing IoT devices across public transportation networks to collect real-time data on vehicle locations, passenger counts, and service status. The analysis of this data will allow us to provide real-time optimization and alert services for both passengers and transportation authorities.

## IoT Devices

- **Sensors on Vehicles**: Equip buses, trains, and trams with GPS devices to emit location data, and counters to measure passenger loads.
- **Environmental Sensors**: Incorporate sensors that measure traffic conditions, weather, and pollution levels to provide additional insights and value.

## Information System Components

### 1. Distributed Storage

- **Time-Series Database**: MongoDB
- **Big Data Storage**: Hadoop HDFS

### 2. Distributed Stream Processing

- **Real-Time Stream Processor**: Apache Kafka Streams
- **Message Queues**: Apache Kafka

### 3. Stream Consumers

- **Alert Service**: Implement a service that consumes the data stream to trigger real-time alerts based on predefined conditions such as vehicle delays, overcapacity, or accidents.
- **Analytics Service**: Aggregate and analyze data over time to support long-term planning, optimization, and provide insights into usage patterns.

## Challenges and Solutions

### Data Storage Constraints

- **Scalability**: Ability to handle the immense volume of data from millions of devices.
- **Performance**: Fast read/write capabilities essential for real-time data processing.
- **Reliability**: Ensure high availability and fault tolerance.
- **Geo-Distribution**: Support for geo-replication to extend services across multiple regions.

### Alert System Constraints

- **Low Latency**: Critical for the real-time processing of data streams to issue alerts.
- **Reliability**: The system must maintain high uptime and be fault-tolerant.
- **Prioritization**: Alerts should be categorized and prioritized effectively.
- **Delivery**: Alerts must be distributed efficiently to end-users, potentially through mobile apps or other communication channels.

## Implementation Ideas

- **Real-Time Vehicle Tracking**: Offer real-time updates on vehicle locations and estimated arrival times to passengers.
- **Passenger Distribution Alerts**: Notify passengers about less crowded alternative routes to even out passenger distribution.
- **Incident Response**: Facilitate quick rerouting or service adjustment in response to unforeseen delays or incidents.
- **User-Friendly App**: Develop a comprehensive mobile application that provides passengers with real-time recommendations and alerts.
- **Data Visualization Dashboards**: Create dashboards for transportation authorities to visualize data patterns, oversee operations, and manage responses to alerts.
- **Integration with City Services**: Work in harmony with city infrastructure like traffic lights and road services to optimize traffic flow.

